name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: enochcodes/insa-frontend-app
  IMAGE_TAG: latest

jobs:
  build-and-push:
    name: 🛠 Build & Push Frontend Docker Image
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=16384"
      DOCKER_BUILDKIT: 1

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Clean up old images
        run: docker image prune -f

      - name: Set swap space
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: 🏗 Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          build-args: |
            NODE_OPTIONS=--max-old-space-size=16384
            NODE_ENV=production
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  deploy:
    name: 🚀 Deploy Frontend to Production
    needs: build-and-push
    runs-on: [self-hosted, insa-runner]

    steps:
      - name: 📦 Pull latest frontend image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: 🔄 Deploy Docker Stack
        working-directory: /home/ubuntu/insa-deploy
        run: |
          export $(cat .env.full | grep -v '^#' | xargs)
          docker stack deploy -c docker-compose.prod.yaml insa

      - name: ✅ Confirm Services
        run: docker service ls