name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: enochcodes/insa-frontend-app
  IMAGE_TAG: latest

jobs:
  build-and-push:
    name: 🛠 Build & Push Frontend Docker Image
    runs-on: [self-hosted, insa-build-runner] # use your own build runner

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: 🧹 Clean up old Docker resources (optional but recommended)
        run: |
          docker system prune -af || true
          docker builder prune -af || true

      - name: 🏗 Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    name: 🚀 Deploy Frontend to Production
    needs: build-and-push
    runs-on: [self-hosted, insa-runner]

    steps:
      - name: 🛑 Gracefully stop running stack (except Postgres)
        run: |
          # Remove all services in the 'insa' stack except the postgres service
          for service in $(docker stack services insa --format '{{.Name}}'); do
            if [[ "$service" != "insa_postgres" ]]; then
              docker service rm "$service" || true
            fi
          done
          # Wait for all non-postgres services to be removed
          while true; do
            remaining=$(docker stack services insa --format '{{.Name}}' | grep -v '^insa_postgres$' | wc -l)
            if [ "$remaining" -eq 0 ]; then
              break
            fi
            echo "Waiting for non-postgres services to stop..."
            sleep 5
          done
      - name: 📦 Pull latest frontend image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: 🔄 Deploy Docker Stack
        working-directory: /home/ubuntu/insa-deploy
        run: |
          export $(cat .env.full | grep -v '^#' | xargs)
          docker stack deploy -c docker-compose.prod.yaml insa

      - name: ✅ Confirm Services
        run: docker service ls
